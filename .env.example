# ------ Infrastructure settings ------ #
# needed for user creation and alert delivery
DB_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/postgres
# migration url should be with sync driver
ALEMBIC_DB_URL=postgresql://postgres:postgres@localhost:5432/postgres
# needed for docker-compose
POSTGRES_PASSWORD=postgres

# ---------- Application settings ----- #
APP_ROOT_PATH=""
# secret key for session cookie
# - Run 'openssl rand -hex 32' to generate key or use any other method
SESSION_SECRET_KEY=1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890
# verify requests from bot client
BOT_TOKEN=1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890
# CORS_ALLOW_ORIGINS=[]
# COOKIES__DOMAINS=example.com
# COOKIES__NAME=token
# COOKIES__ALLOWED_DOMAINS=[example.com,example.org]

# ---------- Target server settings ----- #
TARGET__DB_URL=postgresql+asyncpg://postgres:postgres@10.10.10.10:5432/postgres
TARGET__SSH_HOST=10.10.10.10
TARGET__SSH_PORT=22
TARGET__SSH_USERNAME=admin
TARGET__SSH_PASSWORD=admin
TARGET__RECEIVERS=[1111111,2222222,333333333]

# ---------- Prometheus settings ----- #
PROMETHEUS__HOST=http://10.10.10.10:9090
# PROMETHEUS__ALERT_RULES_PATH="./prometheus/alert_rules.yml"

# ---------- SMTP settings ----- #
SMTP_ENABLED=false
#    SMTP__HOST=smtp.gmail.com
#    SMTP__PORT=587
#    SMTP__USERNAME=a.a@gmail.com
#    SMTP__PASSWORD=my_super_password

# ---------- JWT settings with signature ----- #
JWT_ENABLED=false
#    # - Run 'openssl genrsa -out private.pem 2048' to generate keys
#    JWT__PRIVATE_KEY_PATH=private.pem
#    # - For existing key run 'openssl rsa -in private.pem -pubout -out public.pem'
#    JWT__PUBLIC_KEY_PATH=public.pem