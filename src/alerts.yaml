alerts:
  max_connections_reached:
    title: PostgreSQL Max Connections Reached
    description: PostgreSQL is maxed out on connections.
    severity: 50
    rule:
      expr: sum(pg_stat_activity_count) by (instance) >= sum(pg_settings_max_connections) by (instance) - sum(pg_settings_superuser_reserved_connections) by (instance)
      for: 1m
      annotations:
        summary: "{{ $labels.instance }} has maxed out Postgres connections."
        description: "{{ $labels.instance }} is exceeding the currently configured maximum Postgres connection limit (current value: {{ $value }}s). Services may be degraded - please take immediate action (you probably need to increase max_connections in the Docker image and re-deploy."
    suggested_actions: []
    related_graphs: []

  high_connections:
    title: PostgreSQL High Connections
    description: PostgreSQL is exceeding 80% of the maximum connection limit.
    severity: 50
    rule:
      expr: sum(pg_stat_activity_count) by (instance) > (sum(pg_settings_max_connections) by (instance) - sum(pg_settings_superuser_reserved_connections) by (instance)) * 0.8
      for: 10m
      annotations:
        summary: "{{ $labels.instance }} is over 80% of max Postgres connections."
        description: "{{ $labels.instance }} is exceeding 80% of the currently configured maximum Postgres connection limit (current value: {{ $value }}s). Please check utilization graphs and confirm if this is normal service growth, abuse, or an otherwise temporary condition or if new resources need to be provisioned (or the limits increased, which is most likely)."
    suggested_actions: []
    related_graphs: []

  postgresql_down:
    title: PostgreSQL Down
    description: PostgreSQL is not processing queries.
    severity: 50
    rule:
      expr: pg_up != 1
      for: 1m
      annotations:
        summary: "PostgreSQL is not processing queries: {{ $labels.instance }}"
        description: "{{ $labels.instance }} is rejecting query requests from the exporter, and thus probably not allowing DNS requests to work either. User services should not be affected provided at least 1 node is still alive."
    suggested_actions: []
    related_graphs: []

  slow_queries:
    title: PostgreSQL Slow Queries
    description: High number of slow queries in PostgreSQL.
    severity: 50
    rule:
      expr: avg(rate(pg_stat_activity_max_tx_duration{datname!~"template.*"}[2m])) by (datname) > 2 * 60
      for: 2m
      annotations:
        summary: "PostgreSQL high number of slow on {{ $labels.cluster }} for database {{ $labels.datname }}"
        description: "PostgreSQL high number of slow queries {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }}"
    suggested_actions: []
    related_graphs: []

  qps:
    title: PostgreSQL QPS
    description: High number of queries per second in PostgreSQL.
    severity: 50
    rule:
      expr: avg(irate(pg_stat_database_xact_commit{datname!~"template.*"}[5m]) + irate(pg_stat_database_xact_rollback{datname!~"template.*"}[5m])) by (datname) > 10000
      for: 5m
      annotations:
        summary: "PostgreSQL high number of queries per second {{ $labels.cluster }} for database {{ $labels.datname }}"
        description: "PostgreSQL high number of queries per second on {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }}"
    suggested_actions: []
    related_graphs: []

  cache_hit_ratio:
    title: PostgreSQL Cache Hit Ratio
    description: Low cache hit rate in PostgreSQL.
    severity: 50
    rule:
      expr: avg(rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m]) / (rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m]) + rate(pg_stat_database_blks_read{datname!~"template.*"}[5m]))) by (datname) < 0.98
      for: 5m
      annotations:
        summary: "PostgreSQL low cache hit rate on {{ $labels.cluster }} for database {{ $labels.datname }}"
        description: "PostgreSQL low on cache hit rate on {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }}"
    suggested_actions: []
    related_graphs: []

# Add more alerts here if needed

